apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 30
    buildToolsVersion "28.0.3"
    buildFeatures {
        dataBinding true
    }
    defaultConfig {
        applicationId "nl.testchamber.mailordercoffeeshop"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // The following argument makes the Android Test Orchestrator run its
        // "pm clear" command after each test invocation. This command ensures
        // that the app's state is completely cleared between tests.
        testInstrumentationRunnerArguments clearPackageData: 'true'

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }

    flavorDimensions "providerVersion", "dataType"

    productFlavors {
        simpledata {
            dimension "providerVersion"
            versionNameSuffix "-simpledata"
            isDefault.set(true)
        }
        retrofitdata {
            dimension "providerVersion"
            versionNameSuffix "-retrofitdata"
        }
        local {
            dimension "dataType"
            versionNameSuffix "-local"
            isDefault.set(true)
        }
        remote {
            dimension "dataType"
            versionNameSuffix "-remote"
        }
    }

    variantFilter { variant ->
        def names = variant.flavors*.name
        def types = variant.buildType.name
        // To check for a certain build type, use variant.buildType.name == "<buildType>"
        if (names.contains("retrofitdata") && names.contains("local") || types.contains("release")) {
            // Gradle ignores any variants that satisfy the conditions above.
            setIgnore(true)
        }
    }


}


dependencies {
    implementation project(':apiservice')
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.appcompat:appcompat:1.2.0"
    implementation "androidx.media:media:$support_version"
    implementation "com.google.android.material:material:1.2.1"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.anko:anko:$anko_version"
    implementation "com.github.JakeWharton:ViewPagerIndicator:$view_pager_indicator_version"
    implementation "android.arch.lifecycle:extensions:1.1.1"
    implementation "android.arch.lifecycle:viewmodel:1.1.1"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:rules:1.3.1-alpha03'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'com.android.support.test.espresso:espresso-contrib:3.0.2'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.3.0'
    androidTestUtil 'androidx.test:orchestrator:1.3.0'
}
repositories {
    mavenCentral()
}
